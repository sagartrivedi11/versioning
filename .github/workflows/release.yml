name: Automated Release with Semantic-Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Semantic Release
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run semantic-release
        id: semantic_release_step # Keep this ID
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run semantic-release and capture its JSON output
          # --json flag ensures structured output for easier parsing
          RELEASE_INFO=$(npx semantic-release --json)

          # Print the full JSON output for debugging purposes (optional)
          echo "Semantic-release JSON Output:"
          echo "$RELEASE_INFO"

          # Extract the new version number using jq
          # .nextRelease.version is the path to the version in the JSON output
          NEW_VERSION=$(echo "$RELEASE_INFO" | jq -r '.nextRelease.version')

          # Set the new_release_version as a step output for GitHub Actions
          # This makes it available via steps.semantic_release_step.outputs.new_release_version
          echo "new_release_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create Release Branch
        # This step will now correctly receive the new_release_version output
        if: steps.semantic_release_step.outputs.new_release_version
        run: |
          # Get the new version number from semantic-release's output
          VERSION="${{ steps.semantic_release_step.outputs.new_release_version }}"
          RELEASE_BRANCH="release/v${VERSION}"
          echo "Attempting to create and push branch: $RELEASE_BRANCH"

          # Configure Git with the GitHub Actions bot identity
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Fetch all tags to ensure the newly created tag is available locally
          git fetch --tags

          # Create the new branch from the tag semantic-release just created
          git branch $RELEASE_BRANCH "v${VERSION}"

          # Push the new branch to the remote repository
          git push origin $RELEASE_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}